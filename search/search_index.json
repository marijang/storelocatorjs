{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Storelocatorjs with Google Maps \u00b6 Made by developers for developers \u2665 Storelocatorjs is a fast and lightweight Javascript library to easily build a store locator using Google Maps API V3 . Only 6Kb on production with gzip, Storelocatorjs has no dependency with any framework or library and is written in Javascript native . Github & npm \u00b6 The library is available as the storelocatorjs package name on Github and npm . If you like the project, like it on Github \ud83d\ude03 Star Browsers support \u00b6 The project is fully compatible with the most popular web browsers. More information about the Google Maps support on Google Developers . HTML and CSS files are W3C valid. Licenses \u00b6 Commercial license \u00b6 If you want to use Storelocatorjs to develop commercial sites, themes, projects, and applications, the Commercial License is the appropriate license. With this option, your source code is kept proprietary. Purchase a Storelocatorjs Commercial License on the license page . Open source license \u00b6 If you are creating an open source application under a license compatible with the GNU GPL license v3 , you may use Storelocatorjs under the terms of the GPLv3. Read more about Storelocatorjs's license Contributors \u00b6 Created with \u2665 by @yoriiis Many thanks to Cyril CAMBOURNAC for its contribution. ((window.gitter = {}).chat = {}).options = { room: 'store-locator/store-locator' };","title":"Overview"},{"location":"index.html#storelocatorjs-with-google-maps","text":"Made by developers for developers \u2665 Storelocatorjs is a fast and lightweight Javascript library to easily build a store locator using Google Maps API V3 . Only 6Kb on production with gzip, Storelocatorjs has no dependency with any framework or library and is written in Javascript native .","title":"Storelocatorjs with Google Maps"},{"location":"index.html#github-npm","text":"The library is available as the storelocatorjs package name on Github and npm . If you like the project, like it on Github \ud83d\ude03 Star","title":"Github &amp; npm"},{"location":"index.html#browsers-support","text":"The project is fully compatible with the most popular web browsers. More information about the Google Maps support on Google Developers . HTML and CSS files are W3C valid.","title":"Browsers support"},{"location":"index.html#licenses","text":"","title":"Licenses"},{"location":"index.html#commercial-license","text":"If you want to use Storelocatorjs to develop commercial sites, themes, projects, and applications, the Commercial License is the appropriate license. With this option, your source code is kept proprietary. Purchase a Storelocatorjs Commercial License on the license page .","title":"Commercial license"},{"location":"index.html#open-source-license","text":"If you are creating an open source application under a license compatible with the GNU GPL license v3 , you may use Storelocatorjs under the terms of the GPLv3. Read more about Storelocatorjs's license","title":"Open source license"},{"location":"index.html#contributors","text":"Created with \u2665 by @yoriiis Many thanks to Cyril CAMBOURNAC for its contribution. ((window.gitter = {}).chat = {}).options = { room: 'store-locator/store-locator' };","title":"Contributors"},{"location":"available-options.html","text":"Storelocatorjs contains many options to allow you to easily configure your map according to your needs. List of all options with their default values. apiKey \u00b6 mandatory - default: string = '' Tells storelocatorjs the API key to use Google Maps API. 1 2 3 4 5 new storelocatorjs ({ options : { apiKey : '' } }); webServiceUrl \u00b6 mandatory - default: string = '' Tells storelocatorjs where is located the cloud function web service to get JSON store datas. 1 2 3 4 5 new storelocatorjs ({ options : { webServiceUrl : '' } }); cluster.options \u00b6 default: object Tells storelocatorjs marker clusters options. Documentation is available on Google Developers . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 new storelocatorjs ({ options : { cluster : { options : { { averageCenter : true , gridSize : 50 , imagePath : 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m' , maxZoom : 13 , minimumClusterSize : 2 , styles : [], zoomOnClick : true } } } } }); cluster.status \u00b6 default: boolean = false Tells storelocatorjs whether to enable the marker clustering. 1 2 3 4 5 6 7 new storelocatorjs ({ options : { cluster : { status : false } } }); debug \u00b6 default: boolean = false Tells storelocatorjs whether to display the debug overlay. 1 2 3 4 5 new storelocatorjs ({ options : { debug : false } }); geolocation.startOnLoad \u00b6 default: integer = false Tells storelocatorjs whether to enable an auto geolocation request on page load. 1 2 3 4 5 6 7 new storelocatorjs ({ options : { geolocation : { startOnLoad : false } } }); geolocation.status \u00b6 default: boolean = true Tells storelocatorjs whether to enable the geolocation. 1 2 3 4 5 6 7 new storelocatorjs ({ options : { geolocation : { status : true } } }); map.markers.width \u00b6 default: integer = 30 Tells storelocatorjs what is the marker width in pixel (without unity). 1 2 3 4 5 6 7 8 9 new storelocatorjs ({ options : { map : { markers : { width : 30 } } } }); map.markers.height \u00b6 default: integer = 40 Tells storelocatorjs what is the marker height in pixel (without unity). 1 2 3 4 5 6 7 8 9 new storelocatorjs ({ options : { map : { markers : { height : 40 } } } }); map.markers.styles \u00b6 default: array Tells storelocatorjs what are the geolocation marker styles. The category userPosition is reserved to identify the geolocation marker. 1 2 3 4 5 6 7 8 9 10 11 12 13 new storelocatorjs ({ options : { map : { markers : { styles : [{ category : 'userPosition' , colorBackground : '#4285f4' , colorText : '#fff' }] } } } }); The array map.markers.styles can accept entries for each category to customize markers by category. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 new storelocatorjs ({ options : { map : { markers : { styles : [{ category : '1' , colorBackground : '#ff6600' , colorText : '#fff' },{ category : '2' , colorBackground : '#ffcc33' , colorText : '#fff' },{ category : '3' , colorBackground : '#ea4c89' , colorText : '#fff' }] } } } }); map.options \u00b6 default: object Tells storelocatorjs marker options. Documentation is available on Google Developers . map.options.styles can be used to stylized the map. Documentation is available on the feature page 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 new storelocatorjs ({ options : { map : { options : { center : [ 46.227638 , 2.213749 ], disableDefaultUI : false , fullscreenControl : true , mapTypeControl : false , mapTypeId : 'roadmap' , scaleControl : false , scrollwheel : true , streetViewControl : false , styles : [], zoom : 6 } } } }); requests.searchRadius \u00b6 default: integer = 50 Tells storelocatorjs what is the search radius in kilometers, when a search is triggered by the user. 1 2 3 4 5 6 7 new storelocatorjs ({ options : { requests : { searchRadius : 50 } } }); requests.storesLimit \u00b6 default: integer = 20 Tells storelocatorjs what is the limit of results return by the request. Use 0 to return unlimited stores, according to the JSON database. 1 2 3 4 5 6 7 new storelocatorjs ({ options : { requests : { storesLimit : 20 } } }); selectors \u00b6 default: object Tells storelocatorjs what are HTML identifier (class or data attribute) for each elements. You can personalize them. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 new storelocatorjs ({ options : { selectors : { container : '.storelocator' , formSearch : '.storelocator-formSearch' , geolocButton : '.storelocator-geolocButton' , inputSearch : '.storelocator-inputSearch' , loader : '.storelocator-loader' , nav : '.storelocator-nav' , searchFilters : '[data-filter]' , sidebar : '.storelocator-sidebar' , sidebarResults : '.storelocator-sidebarResults' } } }); markersUpdate.limitInViewport \u00b6 default: integer = 30 Tells storelocatorjs what is the maximum of results in the main viewport when an auto-search is triggered. Zoom or move events may trigger an auto-search if user extends the area. 1 2 3 4 5 6 7 new storelocatorjs ({ options : { markersUpdate : { limitInViewport : 30 } } }); markersUpdate.maxRadius \u00b6 default: integer = 150 Tells storelocatorjs what is the maximum search radius in kilometers during an auto-search. 1 2 3 4 5 6 7 new storelocatorjs ({ options : { markersUpdate : { maxRadius : 150 } } }); markersUpdate.status \u00b6 default: boolean = true Tells storelocatorjs whether to enable auto-search to refresh markers on area bounds changed. Zoom or move events may trigger an auto-search if user extends the area. 1 2 3 4 5 6 7 new storelocatorjs ({ options : { markersUpdate : { status : true } } }); markersUpdate.stepRadius \u00b6 default: integer = 50 Tells storelocatorjs what is the search radius when the default search limit of 30 kilometers is exceeded. Zoom or move events may trigger an auto-search if user extends the area. 1 2 3 4 5 6 7 new storelocatorjs ({ options : { markersUpdate : { stepRadius : 50 } } }); ((window.gitter = {}).chat = {}).options = { room: 'store-locator/store-locator' };","title":"Available options"},{"location":"available-options.html#apikey","text":"mandatory - default: string = '' Tells storelocatorjs the API key to use Google Maps API. 1 2 3 4 5 new storelocatorjs ({ options : { apiKey : '' } });","title":"apiKey"},{"location":"available-options.html#webserviceurl","text":"mandatory - default: string = '' Tells storelocatorjs where is located the cloud function web service to get JSON store datas. 1 2 3 4 5 new storelocatorjs ({ options : { webServiceUrl : '' } });","title":"webServiceUrl"},{"location":"available-options.html#clusteroptions","text":"default: object Tells storelocatorjs marker clusters options. Documentation is available on Google Developers . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 new storelocatorjs ({ options : { cluster : { options : { { averageCenter : true , gridSize : 50 , imagePath : 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m' , maxZoom : 13 , minimumClusterSize : 2 , styles : [], zoomOnClick : true } } } } });","title":"cluster.options"},{"location":"available-options.html#clusterstatus","text":"default: boolean = false Tells storelocatorjs whether to enable the marker clustering. 1 2 3 4 5 6 7 new storelocatorjs ({ options : { cluster : { status : false } } });","title":"cluster.status"},{"location":"available-options.html#debug","text":"default: boolean = false Tells storelocatorjs whether to display the debug overlay. 1 2 3 4 5 new storelocatorjs ({ options : { debug : false } });","title":"debug"},{"location":"available-options.html#geolocationstartonload","text":"default: integer = false Tells storelocatorjs whether to enable an auto geolocation request on page load. 1 2 3 4 5 6 7 new storelocatorjs ({ options : { geolocation : { startOnLoad : false } } });","title":"geolocation.startOnLoad"},{"location":"available-options.html#geolocationstatus","text":"default: boolean = true Tells storelocatorjs whether to enable the geolocation. 1 2 3 4 5 6 7 new storelocatorjs ({ options : { geolocation : { status : true } } });","title":"geolocation.status"},{"location":"available-options.html#mapmarkerswidth","text":"default: integer = 30 Tells storelocatorjs what is the marker width in pixel (without unity). 1 2 3 4 5 6 7 8 9 new storelocatorjs ({ options : { map : { markers : { width : 30 } } } });","title":"map.markers.width"},{"location":"available-options.html#mapmarkersheight","text":"default: integer = 40 Tells storelocatorjs what is the marker height in pixel (without unity). 1 2 3 4 5 6 7 8 9 new storelocatorjs ({ options : { map : { markers : { height : 40 } } } });","title":"map.markers.height"},{"location":"available-options.html#mapmarkersstyles","text":"default: array Tells storelocatorjs what are the geolocation marker styles. The category userPosition is reserved to identify the geolocation marker. 1 2 3 4 5 6 7 8 9 10 11 12 13 new storelocatorjs ({ options : { map : { markers : { styles : [{ category : 'userPosition' , colorBackground : '#4285f4' , colorText : '#fff' }] } } } }); The array map.markers.styles can accept entries for each category to customize markers by category. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 new storelocatorjs ({ options : { map : { markers : { styles : [{ category : '1' , colorBackground : '#ff6600' , colorText : '#fff' },{ category : '2' , colorBackground : '#ffcc33' , colorText : '#fff' },{ category : '3' , colorBackground : '#ea4c89' , colorText : '#fff' }] } } } });","title":"map.markers.styles"},{"location":"available-options.html#mapoptions","text":"default: object Tells storelocatorjs marker options. Documentation is available on Google Developers . map.options.styles can be used to stylized the map. Documentation is available on the feature page 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 new storelocatorjs ({ options : { map : { options : { center : [ 46.227638 , 2.213749 ], disableDefaultUI : false , fullscreenControl : true , mapTypeControl : false , mapTypeId : 'roadmap' , scaleControl : false , scrollwheel : true , streetViewControl : false , styles : [], zoom : 6 } } } });","title":"map.options"},{"location":"available-options.html#requestssearchradius","text":"default: integer = 50 Tells storelocatorjs what is the search radius in kilometers, when a search is triggered by the user. 1 2 3 4 5 6 7 new storelocatorjs ({ options : { requests : { searchRadius : 50 } } });","title":"requests.searchRadius"},{"location":"available-options.html#requestsstoreslimit","text":"default: integer = 20 Tells storelocatorjs what is the limit of results return by the request. Use 0 to return unlimited stores, according to the JSON database. 1 2 3 4 5 6 7 new storelocatorjs ({ options : { requests : { storesLimit : 20 } } });","title":"requests.storesLimit"},{"location":"available-options.html#selectors","text":"default: object Tells storelocatorjs what are HTML identifier (class or data attribute) for each elements. You can personalize them. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 new storelocatorjs ({ options : { selectors : { container : '.storelocator' , formSearch : '.storelocator-formSearch' , geolocButton : '.storelocator-geolocButton' , inputSearch : '.storelocator-inputSearch' , loader : '.storelocator-loader' , nav : '.storelocator-nav' , searchFilters : '[data-filter]' , sidebar : '.storelocator-sidebar' , sidebarResults : '.storelocator-sidebarResults' } } });","title":"selectors"},{"location":"available-options.html#markersupdatelimitinviewport","text":"default: integer = 30 Tells storelocatorjs what is the maximum of results in the main viewport when an auto-search is triggered. Zoom or move events may trigger an auto-search if user extends the area. 1 2 3 4 5 6 7 new storelocatorjs ({ options : { markersUpdate : { limitInViewport : 30 } } });","title":"markersUpdate.limitInViewport"},{"location":"available-options.html#markersupdatemaxradius","text":"default: integer = 150 Tells storelocatorjs what is the maximum search radius in kilometers during an auto-search. 1 2 3 4 5 6 7 new storelocatorjs ({ options : { markersUpdate : { maxRadius : 150 } } });","title":"markersUpdate.maxRadius"},{"location":"available-options.html#markersupdatestatus","text":"default: boolean = true Tells storelocatorjs whether to enable auto-search to refresh markers on area bounds changed. Zoom or move events may trigger an auto-search if user extends the area. 1 2 3 4 5 6 7 new storelocatorjs ({ options : { markersUpdate : { status : true } } });","title":"markersUpdate.status"},{"location":"available-options.html#markersupdatestepradius","text":"default: integer = 50 Tells storelocatorjs what is the search radius when the default search limit of 30 kilometers is exceeded. Zoom or move events may trigger an auto-search if user extends the area. 1 2 3 4 5 6 7 new storelocatorjs ({ options : { markersUpdate : { stepRadius : 50 } } }); ((window.gitter = {}).chat = {}).options = { room: 'store-locator/store-locator' };","title":"markersUpdate.stepRadius"},{"location":"download.html","text":"Storelocatorjs is available as the storelocatorjs package name on Github and npm . ((window.gitter = {}).chat = {}).options = { room: 'store-locator/store-locator' };","title":"Download"},{"location":"features.html","text":"Responsive design \u00b6 Storelocatorjs is responsive mobile first and can be customized with just a few CSS rules. Maps styles \u00b6 The map can be customized with a configuration object in the map.options.styles property. Use for example Snazzy Maps tools to generate a JSON configuration, and paste it in the constructor key map.options.styles . Below, an example of configuration: 1 2 3 { \"styles\" : [{ \"featureType\" : \"administrative\" , \"elementType\" : \"labels.text.fill\" , \"stylers\" :[{ \"color\" : \"#6195a0\" }]},{ \"featureType\" : \"administrative.province\" , \"elementType\" : \"geometry.stroke\" , \"stylers\" :[{ \"visibility\" : \"off\" }]},{ \"featureType\" : \"landscape\" , \"elementType\" : \"geometry\" , \"stylers\" :[{ \"lightness\" : \"0\" },{ \"saturation\" : \"0\" },{ \"color\" : \"#f5f5f2\" },{ \"gamma\" : \"1\" }]},{ \"featureType\" : \"landscape.man_made\" , \"elementType\" : \"all\" , \"stylers\" :[{ \"lightness\" : \"-3\" },{ \"gamma\" : \"1.00\" }]},{ \"featureType\" : \"landscape.natural.terrain\" , \"elementType\" : \"all\" , \"stylers\" :[{ \"visibility\" : \"off\" }]},{ \"featureType\" : \"poi\" , \"elementType\" : \"all\" , \"stylers\" :[{ \"visibility\" : \"off\" }]},{ \"featureType\" : \"poi.park\" , \"elementType\" : \"geometry.fill\" , \"stylers\" :[{ \"color\" : \"#bae5ce\" },{ \"visibility\" : \"on\" }]},{ \"featureType\" : \"road\" , \"elementType\" : \"all\" , \"stylers\" :[{ \"saturation\" : -100 },{ \"lightness\" : 45 },{ \"visibility\" : \"simplified\" }]},{ \"featureType\" : \"road.highway\" , \"elementType\" : \"all\" , \"stylers\" :[{ \"visibility\" : \"simplified\" }]},{ \"featureType\" : \"road.highway\" , \"elementType\" : \"geometry.fill\" , \"stylers\" :[{ \"color\" : \"#fac9a9\" },{ \"visibility\" : \"simplified\" }]},{ \"featureType\" : \"road.highway\" , \"elementType\" : \"labels.text\" , \"stylers\" :[{ \"color\" : \"#4e4e4e\" }]},{ \"featureType\" : \"road.arterial\" , \"elementType\" : \"labels.text.fill\" , \"stylers\" :[{ \"color\" : \"#787878\" }]},{ \"featureType\" : \"road.arterial\" , \"elementType\" : \"labels.icon\" , \"stylers\" :[{ \"visibility\" : \"off\" }]},{ \"featureType\" : \"transit\" , \"elementType\" : \"all\" , \"stylers\" :[{ \"visibility\" : \"simplified\" }]},{ \"featureType\" : \"transit.station.airport\" , \"elementType\" : \"labels.icon\" , \"stylers\" :[{ \"hue\" : \"#0a00ff\" },{ \"saturation\" : \"-77\" },{ \"gamma\" : \"0.57\" },{ \"lightness\" : \"0\" }]},{ \"featureType\" : \"transit.station.rail\" , \"elementType\" : \"labels.text.fill\" , \"stylers\" :[{ \"color\" : \"#43321e\" }]},{ \"featureType\" : \"transit.station.rail\" , \"elementType\" : \"labels.icon\" , \"stylers\" :[{ \"hue\" : \"#ff6c00\" },{ \"lightness\" : \"4\" },{ \"gamma\" : \"0.75\" },{ \"saturation\" : \"-68\" }]},{ \"featureType\" : \"water\" , \"elementType\" : \"all\" , \"stylers\" :[{ \"color\" : \"#eaf6f8\" },{ \"visibility\" : \"on\" }]},{ \"featureType\" : \"water\" , \"elementType\" : \"geometry.fill\" , \"stylers\" :[{ \"color\" : \"#c7eced\" }]},{ \"featureType\" : \"water\" , \"elementType\" : \"labels.text.fill\" , \"stylers\" :[{ \"lightness\" : \"-49\" },{ \"saturation\" : \"-53\" },{ \"gamma\" : \"0.79\" }] } Autocomplete \u00b6 Storelocatorjs includes by default Google Maps Autocomplete . The places librairy is automatically loaded. Geolocation \u00b6 Storelocatorjs integrate its own geolocation button .storelocator-geolocButton to trigger a geolocation request. Warning Geolocation need SSL certificat with https on Google Chrome and somes others recents browsers. Documentation is available on Google Developers . Filters \u00b6 Storelocatorjs can be used with or without filters. Filters let you filter stores by categories. Store categories can be unlimited but must be unique for each marker. Identifie them by a unique ID in the JSON key categories as string format. Marker styles \u00b6 Marker have a default style, the same as on Google Maps. Storelocatorjs has an option to easily customized the style of the marker with a pretty SVG. To use this feature, fill the option map.markers as below: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 { \"map\" : { \"markers\" : { \"width\" : 30 , \"height\" : 40 , \"styles\" : [{ \"category\" : \"userPosition\" , \"colorBackground\" : \"#4285f4\" , \"colorText\" : \"#fff\" }, { \"category\" : \"1\" , \"colorBackground\" : \"#ec4233\" , \"colorText\" : \"#fff\" },{ \"category\" : \"2\" , \"colorBackground\" : \"#009925\" , \"colorText\" : \"#fff\" },{ \"category\" : \"3\" , \"colorBackground\" : \"#eeb211\" , \"colorText\" : \"#fff\" }] } } } You can change marker dimensions ( width and height ) in pixel by passing an integer (without unity). map.markers.style contains object and each objects correspond to a marker category, with 3 parameters: Geolocation marker The marker category userPosition allow you to customized the marker style of the user geolocation. Do not change the category name of this marker. Marker SVG on IE Internet Explorer doesn't accept custom SVG for markers. Default markers are use on this browser. Clusters \u00b6 With cluster option enabled, you need to load the markerclusterer.js library before the storelocatorjs. Documentation is available on Google Developers 1 < script src = \"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js\" ></ script > 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 new storelocatorjs ({ options : { cluster : { status : true , options : { gridSize : 50 , maxZoom : 13 , imagePath : \"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m\" , zoomOnClick : true , averageCenter : true , minimumClusterSize : 2 , styles : [] } } } }); Default image can be changed, fill the option cluster.options.styles as below, to easily customized the style of the cluster image. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 new storelocatorjs ({ options : { cluster : { options : { styles : [{ \"url\" : \"/images/cluster.png\" , \"textColor\" : \"#000\" , \"width\" : 60 , \"height\" : 60 }] } } } }); Markers update \u00b6 Storelocatorjs auto-search allow to refresh markers on area bounds changed. Zoom or move events may trigger an auto-search if user extends the area. To use this feature, enable options markersUpdate.status . Viewport overlays Enable debug option to see viewport overlays above the map: red : list of all stores according to maxRadius option. User can move on this area without refresh the map. green : list of all stores according to the limitInViewport option. Map is centered on this viewport. Info window \u00b6 Storelocatorjs allow to show marker informations with the native Google Maps info window. Below, the default template displays the fields available in the JSON. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 < div class = \"storelocator-infoWindow\" > < span class = \"store-picture\" > < img src = \"{picture}\" alt = \"{title}\" /> </ span > < div class = \"storelocator-detailStore\" > < span class = \"storelocator-detailStoreTitle\" > {title} </ span > < span class = \"storelocator-detailStoreDistance\" > < a href = \"http://www.google.fr/maps/dir/${origin}/${destination}\" title = \"Itinerary\" target = \"_blank\" > {distance}km </ a > </ span > < span class = \"storelocator-detailStoreAddress\" > {address} </ span > < span class = \"storelocator-detailStoreZipcode\" > {zipcode} </ span > < span class = \"storelocator-detailStoreCity\" > {city} </ span > < span class = \"storelocator-detailStorePhone\" > < a href = \"tel:{phone}\" title = \"Call\" > {phone} </ a > </ span > < span class = \"store-link\" > < a href = \"{link}\" title = \"Visit website\" target = \"_blank\" > {link} </ a > </ span > </ div > </ div > Distance You will notice that the distance information is automatically caculate with the cloud function script \ud83d\udc4d. ((window.gitter = {}).chat = {}).options = { room: 'store-locator/store-locator' };","title":"Features"},{"location":"features.html#responsive-design","text":"Storelocatorjs is responsive mobile first and can be customized with just a few CSS rules.","title":"Responsive design"},{"location":"features.html#maps-styles","text":"The map can be customized with a configuration object in the map.options.styles property. Use for example Snazzy Maps tools to generate a JSON configuration, and paste it in the constructor key map.options.styles . Below, an example of configuration: 1 2 3 { \"styles\" : [{ \"featureType\" : \"administrative\" , \"elementType\" : \"labels.text.fill\" , \"stylers\" :[{ \"color\" : \"#6195a0\" }]},{ \"featureType\" : \"administrative.province\" , \"elementType\" : \"geometry.stroke\" , \"stylers\" :[{ \"visibility\" : \"off\" }]},{ \"featureType\" : \"landscape\" , \"elementType\" : \"geometry\" , \"stylers\" :[{ \"lightness\" : \"0\" },{ \"saturation\" : \"0\" },{ \"color\" : \"#f5f5f2\" },{ \"gamma\" : \"1\" }]},{ \"featureType\" : \"landscape.man_made\" , \"elementType\" : \"all\" , \"stylers\" :[{ \"lightness\" : \"-3\" },{ \"gamma\" : \"1.00\" }]},{ \"featureType\" : \"landscape.natural.terrain\" , \"elementType\" : \"all\" , \"stylers\" :[{ \"visibility\" : \"off\" }]},{ \"featureType\" : \"poi\" , \"elementType\" : \"all\" , \"stylers\" :[{ \"visibility\" : \"off\" }]},{ \"featureType\" : \"poi.park\" , \"elementType\" : \"geometry.fill\" , \"stylers\" :[{ \"color\" : \"#bae5ce\" },{ \"visibility\" : \"on\" }]},{ \"featureType\" : \"road\" , \"elementType\" : \"all\" , \"stylers\" :[{ \"saturation\" : -100 },{ \"lightness\" : 45 },{ \"visibility\" : \"simplified\" }]},{ \"featureType\" : \"road.highway\" , \"elementType\" : \"all\" , \"stylers\" :[{ \"visibility\" : \"simplified\" }]},{ \"featureType\" : \"road.highway\" , \"elementType\" : \"geometry.fill\" , \"stylers\" :[{ \"color\" : \"#fac9a9\" },{ \"visibility\" : \"simplified\" }]},{ \"featureType\" : \"road.highway\" , \"elementType\" : \"labels.text\" , \"stylers\" :[{ \"color\" : \"#4e4e4e\" }]},{ \"featureType\" : \"road.arterial\" , \"elementType\" : \"labels.text.fill\" , \"stylers\" :[{ \"color\" : \"#787878\" }]},{ \"featureType\" : \"road.arterial\" , \"elementType\" : \"labels.icon\" , \"stylers\" :[{ \"visibility\" : \"off\" }]},{ \"featureType\" : \"transit\" , \"elementType\" : \"all\" , \"stylers\" :[{ \"visibility\" : \"simplified\" }]},{ \"featureType\" : \"transit.station.airport\" , \"elementType\" : \"labels.icon\" , \"stylers\" :[{ \"hue\" : \"#0a00ff\" },{ \"saturation\" : \"-77\" },{ \"gamma\" : \"0.57\" },{ \"lightness\" : \"0\" }]},{ \"featureType\" : \"transit.station.rail\" , \"elementType\" : \"labels.text.fill\" , \"stylers\" :[{ \"color\" : \"#43321e\" }]},{ \"featureType\" : \"transit.station.rail\" , \"elementType\" : \"labels.icon\" , \"stylers\" :[{ \"hue\" : \"#ff6c00\" },{ \"lightness\" : \"4\" },{ \"gamma\" : \"0.75\" },{ \"saturation\" : \"-68\" }]},{ \"featureType\" : \"water\" , \"elementType\" : \"all\" , \"stylers\" :[{ \"color\" : \"#eaf6f8\" },{ \"visibility\" : \"on\" }]},{ \"featureType\" : \"water\" , \"elementType\" : \"geometry.fill\" , \"stylers\" :[{ \"color\" : \"#c7eced\" }]},{ \"featureType\" : \"water\" , \"elementType\" : \"labels.text.fill\" , \"stylers\" :[{ \"lightness\" : \"-49\" },{ \"saturation\" : \"-53\" },{ \"gamma\" : \"0.79\" }] }","title":"Maps styles"},{"location":"features.html#autocomplete","text":"Storelocatorjs includes by default Google Maps Autocomplete . The places librairy is automatically loaded.","title":"Autocomplete"},{"location":"features.html#geolocation","text":"Storelocatorjs integrate its own geolocation button .storelocator-geolocButton to trigger a geolocation request. Warning Geolocation need SSL certificat with https on Google Chrome and somes others recents browsers. Documentation is available on Google Developers .","title":"Geolocation"},{"location":"features.html#filters","text":"Storelocatorjs can be used with or without filters. Filters let you filter stores by categories. Store categories can be unlimited but must be unique for each marker. Identifie them by a unique ID in the JSON key categories as string format.","title":"Filters"},{"location":"features.html#marker-styles","text":"Marker have a default style, the same as on Google Maps. Storelocatorjs has an option to easily customized the style of the marker with a pretty SVG. To use this feature, fill the option map.markers as below: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 { \"map\" : { \"markers\" : { \"width\" : 30 , \"height\" : 40 , \"styles\" : [{ \"category\" : \"userPosition\" , \"colorBackground\" : \"#4285f4\" , \"colorText\" : \"#fff\" }, { \"category\" : \"1\" , \"colorBackground\" : \"#ec4233\" , \"colorText\" : \"#fff\" },{ \"category\" : \"2\" , \"colorBackground\" : \"#009925\" , \"colorText\" : \"#fff\" },{ \"category\" : \"3\" , \"colorBackground\" : \"#eeb211\" , \"colorText\" : \"#fff\" }] } } } You can change marker dimensions ( width and height ) in pixel by passing an integer (without unity). map.markers.style contains object and each objects correspond to a marker category, with 3 parameters: Geolocation marker The marker category userPosition allow you to customized the marker style of the user geolocation. Do not change the category name of this marker. Marker SVG on IE Internet Explorer doesn't accept custom SVG for markers. Default markers are use on this browser.","title":"Marker styles"},{"location":"features.html#clusters","text":"With cluster option enabled, you need to load the markerclusterer.js library before the storelocatorjs. Documentation is available on Google Developers 1 < script src = \"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js\" ></ script > 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 new storelocatorjs ({ options : { cluster : { status : true , options : { gridSize : 50 , maxZoom : 13 , imagePath : \"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m\" , zoomOnClick : true , averageCenter : true , minimumClusterSize : 2 , styles : [] } } } }); Default image can be changed, fill the option cluster.options.styles as below, to easily customized the style of the cluster image. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 new storelocatorjs ({ options : { cluster : { options : { styles : [{ \"url\" : \"/images/cluster.png\" , \"textColor\" : \"#000\" , \"width\" : 60 , \"height\" : 60 }] } } } });","title":"Clusters"},{"location":"features.html#markers-update","text":"Storelocatorjs auto-search allow to refresh markers on area bounds changed. Zoom or move events may trigger an auto-search if user extends the area. To use this feature, enable options markersUpdate.status . Viewport overlays Enable debug option to see viewport overlays above the map: red : list of all stores according to maxRadius option. User can move on this area without refresh the map. green : list of all stores according to the limitInViewport option. Map is centered on this viewport.","title":"Markers update"},{"location":"features.html#info-window","text":"Storelocatorjs allow to show marker informations with the native Google Maps info window. Below, the default template displays the fields available in the JSON. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 < div class = \"storelocator-infoWindow\" > < span class = \"store-picture\" > < img src = \"{picture}\" alt = \"{title}\" /> </ span > < div class = \"storelocator-detailStore\" > < span class = \"storelocator-detailStoreTitle\" > {title} </ span > < span class = \"storelocator-detailStoreDistance\" > < a href = \"http://www.google.fr/maps/dir/${origin}/${destination}\" title = \"Itinerary\" target = \"_blank\" > {distance}km </ a > </ span > < span class = \"storelocator-detailStoreAddress\" > {address} </ span > < span class = \"storelocator-detailStoreZipcode\" > {zipcode} </ span > < span class = \"storelocator-detailStoreCity\" > {city} </ span > < span class = \"storelocator-detailStorePhone\" > < a href = \"tel:{phone}\" title = \"Call\" > {phone} </ a > </ span > < span class = \"store-link\" > < a href = \"{link}\" title = \"Visit website\" target = \"_blank\" > {link} </ a > </ span > </ div > </ div > Distance You will notice that the distance information is automatically caculate with the cloud function script \ud83d\udc4d. ((window.gitter = {}).chat = {}).options = { room: 'store-locator/store-locator' };","title":"Info window"},{"location":"getting-started.html","text":"Installation \u00b6 NPM \u00b6 Install Storelocatorjs with npm: 1 npm install storelocatorjs 1 2 3 4 5 6 7 import storelocatorjs from 'storelocatorjs' ; import 'storelocatorjs.css' ; new storelocatorjs ({ apiKey : '' webSerciceUrl : '' }); Manual import \u00b6 Includes files manually in your project: 1 2 3 4 5 6 7 8 9 < link rel = \"stylesheet\" href = \"storelocator.css\" /> < script src = \"storelocator.js\" ></ script > < script > new storelocatorjs ({ apiKey : '' webSerciceUrl : '' }); </ script > Load Google Maps API \u00b6 Google Maps API is automatically loaded by storelocatorjs. The map is instanciate when the API is ready. API key \u00b6 Create an API key to use Google Maps API on the Google Console API . Cloud function \u00b6 All requests to filter stores by geoposition are send to a cloud function as a web service. Storelocatorjs includes the cloud functions project from Google Firebase located in the ./functions folder. Storelocatorjs examples are linked to the cloud function. To run locally the cloud function, simply create a .env from the .env.dist file in the ./functions directory and fill the CLOUD_FUNCTION_DOMAIN variable with you virtual host to authorize CORS requests. Then, to run Storelocatorjs examples, simply run the following commands: 1 2 3 cd functions npm install npm run serve Cloud function will be automatically accessible locally on Storelocatorjs examples in the ./examples folder. JSON structure \u00b6 The storelocatorjs project includes a JSON example in the folder ./functions/database.json . Datas are stored in an array of object for better performance. Mandatory JSON structure It is important to respect the format of the keys in the JSON file. In case of filters usage, the category value in the highlight line must correspond to the filter value attributes in the HTML. 1 2 3 4 5 6 7 8 9 10 11 [{ \"address\" : \"34 Avenue de la Perri\u00e8re\" , \"category\" : \"1\" , \"city\" : \"Lorient\" , \"id\" : 1 , \"lat\" : 47.7342023 , \"lng\" : -3.3670051 , \"phone\" : \"0297594071\" , \"title\" : \"Le crabe Marteau\" , \"zipcode\" : \"56100\" }] 1 < input type = \"checkbox\" id = \"cat-1\" data-filter value = \"1\" /> JSON fields \u00b6 List of available fields in the JSON. Mandatory fields are lat and lng . lat \u00b6 mandatory - float The latitude of the store. 1 2 3 [{ \"lat\" : \"\" }] lng \u00b6 mandatory - string The longitude of the store. 1 2 3 [{ \"lng\" : \"\" }] address \u00b6 string The address of the store. 1 2 3 [{ \"address\" : \"\" }] category \u00b6 string The category of the store. 1 2 3 [{ \"category\" : \"\" }] city \u00b6 string The city of the store. 1 2 3 [{ \"city\" : \"\" }] id \u00b6 integer The id of the store. 1 2 3 [{ \"id\" : \"\" }] phone \u00b6 string The phone of the store. 1 2 3 [{ \"phone\" : \"\" }] title \u00b6 string The title of the store. 1 2 3 [{ \"title\" : \"\" }] zipcode \u00b6 string The zipcode of the store. 1 2 3 [{ \"zipcode\" : \"\" }] ((window.gitter = {}).chat = {}).options = { room: 'store-locator/store-locator' };","title":"Getting started"},{"location":"getting-started.html#installation","text":"","title":"Installation"},{"location":"getting-started.html#npm","text":"Install Storelocatorjs with npm: 1 npm install storelocatorjs 1 2 3 4 5 6 7 import storelocatorjs from 'storelocatorjs' ; import 'storelocatorjs.css' ; new storelocatorjs ({ apiKey : '' webSerciceUrl : '' });","title":"NPM"},{"location":"getting-started.html#manual-import","text":"Includes files manually in your project: 1 2 3 4 5 6 7 8 9 < link rel = \"stylesheet\" href = \"storelocator.css\" /> < script src = \"storelocator.js\" ></ script > < script > new storelocatorjs ({ apiKey : '' webSerciceUrl : '' }); </ script >","title":"Manual import"},{"location":"getting-started.html#load-google-maps-api","text":"Google Maps API is automatically loaded by storelocatorjs. The map is instanciate when the API is ready.","title":"Load Google Maps API"},{"location":"getting-started.html#api-key","text":"Create an API key to use Google Maps API on the Google Console API .","title":"API key"},{"location":"getting-started.html#cloud-function","text":"All requests to filter stores by geoposition are send to a cloud function as a web service. Storelocatorjs includes the cloud functions project from Google Firebase located in the ./functions folder. Storelocatorjs examples are linked to the cloud function. To run locally the cloud function, simply create a .env from the .env.dist file in the ./functions directory and fill the CLOUD_FUNCTION_DOMAIN variable with you virtual host to authorize CORS requests. Then, to run Storelocatorjs examples, simply run the following commands: 1 2 3 cd functions npm install npm run serve Cloud function will be automatically accessible locally on Storelocatorjs examples in the ./examples folder.","title":"Cloud function"},{"location":"getting-started.html#json-structure","text":"The storelocatorjs project includes a JSON example in the folder ./functions/database.json . Datas are stored in an array of object for better performance. Mandatory JSON structure It is important to respect the format of the keys in the JSON file. In case of filters usage, the category value in the highlight line must correspond to the filter value attributes in the HTML. 1 2 3 4 5 6 7 8 9 10 11 [{ \"address\" : \"34 Avenue de la Perri\u00e8re\" , \"category\" : \"1\" , \"city\" : \"Lorient\" , \"id\" : 1 , \"lat\" : 47.7342023 , \"lng\" : -3.3670051 , \"phone\" : \"0297594071\" , \"title\" : \"Le crabe Marteau\" , \"zipcode\" : \"56100\" }] 1 < input type = \"checkbox\" id = \"cat-1\" data-filter value = \"1\" />","title":"JSON structure"},{"location":"getting-started.html#json-fields","text":"List of available fields in the JSON. Mandatory fields are lat and lng .","title":"JSON fields"},{"location":"getting-started.html#lat","text":"mandatory - float The latitude of the store. 1 2 3 [{ \"lat\" : \"\" }]","title":"lat"},{"location":"getting-started.html#lng","text":"mandatory - string The longitude of the store. 1 2 3 [{ \"lng\" : \"\" }]","title":"lng"},{"location":"getting-started.html#address","text":"string The address of the store. 1 2 3 [{ \"address\" : \"\" }]","title":"address"},{"location":"getting-started.html#category","text":"string The category of the store. 1 2 3 [{ \"category\" : \"\" }]","title":"category"},{"location":"getting-started.html#city","text":"string The city of the store. 1 2 3 [{ \"city\" : \"\" }]","title":"city"},{"location":"getting-started.html#id","text":"integer The id of the store. 1 2 3 [{ \"id\" : \"\" }]","title":"id"},{"location":"getting-started.html#phone","text":"string The phone of the store. 1 2 3 [{ \"phone\" : \"\" }]","title":"phone"},{"location":"getting-started.html#title","text":"string The title of the store. 1 2 3 [{ \"title\" : \"\" }]","title":"title"},{"location":"getting-started.html#zipcode","text":"string The zipcode of the store. 1 2 3 [{ \"zipcode\" : \"\" }] ((window.gitter = {}).chat = {}).options = { room: 'store-locator/store-locator' };","title":"zipcode"},{"location":"how-it-works.html","text":"Cloud functions \u00b6 Storelocatorjs need a cloud function to execute search requests. The cloud function is includes in the project in the ./functions folder. Google Firebase provides a really simple service to create and host your own cloud functions. HTML structure \u00b6 Basic usage \u00b6 The basic usage of the Storelocatorjs without filters or store categories use a minimalist HTML structure. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 < div class = \"storelocator\" > < div class = \"storelocator-loader\" ></ div > < div class = \"storelocator-sidebar\" > < nav class = \"storelocator-nav\" > < ul class = \"storelocator-navList\" > < li class = \"storelocator-navListItem active\" > < button class = \"storelocator-navButton\" data-switch-view data-target = \"map\" > Map </ button > </ li > < li class = \"storelocator-navListItem\" > < button class = \"storelocator-navButton\" data-switch-view data-target = \"list\" > List </ button > </ li > </ ul > </ nav > < div class = \"storelocator-sidebarResults\" ></ div > </ div > < div class = \"storelocator-googleMaps active\" > < div id = \"storelocator-googleMapsCanvas\" ></ div > < button class = \"storelocator-geolocButton\" ></ button > </ div > </ div > Usage with filters \u00b6 Storelocatorjs can have filters matches with store categories. Add the <form> tag highlight inside the sidebar. Categories can be personalized and category ids must correspond to identifiers in the JSON . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 < div class = \"storelocator\" > < div class = \"storelocator-loader\" ></ div > < div class = \"storelocator-sidebar\" > < form class = \"storelocator-formSearch\" name = \"form-search\" > < input type = \"text\" class = \"storelocator-inputSearch\" placeholder = \"Enter a location\" autocomplete = \"off\" /> < div class = \"storelocator-formFilters\" > < div class = \"storelocator-formFiltersRow\" > < div class = \"storelocator-formCheckbox\" > < input type = \"checkbox\" id = \"cat-1\" data-filter checked = \"checked\" value = \"1\" /> < label for = \"cat-1\" class = \"category-1\" > Categorie 1 </ label > </ div > < div class = \"storelocator-formCheckbox\" > < input type = \"checkbox\" id = \"cat-2\" data-filter checked = \"checked\" value = \"2\" /> < label for = \"cat-2\" class = \"category-2\" > Categorie 2 </ label > </ div > </ div > < div class = \"storelocator-formFiltersRow\" > < div class = \"storelocator-formCheckbox\" > < input type = \"checkbox\" id = \"cat-3\" data-filter value = \"3\" /> < label for = \"cat-3\" class = \"category-3\" > Categorie 3 </ label > </ div > </ div > </ div > </ form > < nav class = \"storelocator-nav\" > < ul class = \"storelocator-navList\" > < li class = \"storelocator-navListItem active\" > < button class = \"storelocator-navButton\" data-switch-view data-target = \"map\" > Map </ button > </ li > < li class = \"storelocator-navListItem\" > < button class = \"storelocator-navButton\" data-switch-view data-target = \"list\" > List </ button > </ li > </ ul > </ nav > < div class = \"storelocator-sidebarResults\" ></ div > </ div > < div class = \"storelocator-googleMaps active\" > < div id = \"storelocator-googleMapsCanvas\" ></ div > < button class = \"storelocator-geolocButton\" ></ button > </ div > </ div > Instantiation \u00b6 The storelocatorjs class accept an object as parameter with 2 keys: options - Object of options (mandatory key apiKey and webServiceUrl ) onReady - Callback function (optional) Simple example \u00b6 The simplest way to use Storelocatorjs is like the example below. All default options are used except them passed in the constructor. 1 2 3 4 new Storelocator ({ apiKey : '' , webServiceUrl : '' }) Example with the onReady function \u00b6 The onReady function expose the map instance and is called when the map is instantiated and ready. With the example below, An automatic search is triggered with location coordinates passed in parameters. 1 2 3 4 5 6 7 8 9 new Storelocator ({ apiKey : '' , webServiceUrl : '' }, onReady : function ( map ) { this . triggerRequest ({ 'lat' : 48.8589507 , 'lng' : 2.2770202 }); }) Requests \u00b6 All search requests use the fetch API to communicate with the cloud function with the following parameters. Datas are transmitted by JSON format. lat \u00b6 default: float = null Tells storelocatorjs what is the latitude of the research. lng \u00b6 default: float = null Tells storelocatorjs what is the latitude of the research. categories \u00b6 default: [] = null Tells storelocatorjs what are the selected categories. radius \u00b6 default: integer = 50 Tells storelocatorjs what is the search radius of the request in kilometers. limit \u00b6 default: Integer = 0 Tells storelocatorjs what is the limit of results return by the request. Use 0 to return unlimited stores, according to the JSON database. ((window.gitter = {}).chat = {}).options = { room: 'store-locator/store-locator' };","title":"How it works"},{"location":"how-it-works.html#cloud-functions","text":"Storelocatorjs need a cloud function to execute search requests. The cloud function is includes in the project in the ./functions folder. Google Firebase provides a really simple service to create and host your own cloud functions.","title":"Cloud functions"},{"location":"how-it-works.html#html-structure","text":"","title":"HTML structure"},{"location":"how-it-works.html#basic-usage","text":"The basic usage of the Storelocatorjs without filters or store categories use a minimalist HTML structure. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 < div class = \"storelocator\" > < div class = \"storelocator-loader\" ></ div > < div class = \"storelocator-sidebar\" > < nav class = \"storelocator-nav\" > < ul class = \"storelocator-navList\" > < li class = \"storelocator-navListItem active\" > < button class = \"storelocator-navButton\" data-switch-view data-target = \"map\" > Map </ button > </ li > < li class = \"storelocator-navListItem\" > < button class = \"storelocator-navButton\" data-switch-view data-target = \"list\" > List </ button > </ li > </ ul > </ nav > < div class = \"storelocator-sidebarResults\" ></ div > </ div > < div class = \"storelocator-googleMaps active\" > < div id = \"storelocator-googleMapsCanvas\" ></ div > < button class = \"storelocator-geolocButton\" ></ button > </ div > </ div >","title":"Basic usage"},{"location":"how-it-works.html#usage-with-filters","text":"Storelocatorjs can have filters matches with store categories. Add the <form> tag highlight inside the sidebar. Categories can be personalized and category ids must correspond to identifiers in the JSON . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 < div class = \"storelocator\" > < div class = \"storelocator-loader\" ></ div > < div class = \"storelocator-sidebar\" > < form class = \"storelocator-formSearch\" name = \"form-search\" > < input type = \"text\" class = \"storelocator-inputSearch\" placeholder = \"Enter a location\" autocomplete = \"off\" /> < div class = \"storelocator-formFilters\" > < div class = \"storelocator-formFiltersRow\" > < div class = \"storelocator-formCheckbox\" > < input type = \"checkbox\" id = \"cat-1\" data-filter checked = \"checked\" value = \"1\" /> < label for = \"cat-1\" class = \"category-1\" > Categorie 1 </ label > </ div > < div class = \"storelocator-formCheckbox\" > < input type = \"checkbox\" id = \"cat-2\" data-filter checked = \"checked\" value = \"2\" /> < label for = \"cat-2\" class = \"category-2\" > Categorie 2 </ label > </ div > </ div > < div class = \"storelocator-formFiltersRow\" > < div class = \"storelocator-formCheckbox\" > < input type = \"checkbox\" id = \"cat-3\" data-filter value = \"3\" /> < label for = \"cat-3\" class = \"category-3\" > Categorie 3 </ label > </ div > </ div > </ div > </ form > < nav class = \"storelocator-nav\" > < ul class = \"storelocator-navList\" > < li class = \"storelocator-navListItem active\" > < button class = \"storelocator-navButton\" data-switch-view data-target = \"map\" > Map </ button > </ li > < li class = \"storelocator-navListItem\" > < button class = \"storelocator-navButton\" data-switch-view data-target = \"list\" > List </ button > </ li > </ ul > </ nav > < div class = \"storelocator-sidebarResults\" ></ div > </ div > < div class = \"storelocator-googleMaps active\" > < div id = \"storelocator-googleMapsCanvas\" ></ div > < button class = \"storelocator-geolocButton\" ></ button > </ div > </ div >","title":"Usage with filters"},{"location":"how-it-works.html#instantiation","text":"The storelocatorjs class accept an object as parameter with 2 keys: options - Object of options (mandatory key apiKey and webServiceUrl ) onReady - Callback function (optional)","title":"Instantiation"},{"location":"how-it-works.html#simple-example","text":"The simplest way to use Storelocatorjs is like the example below. All default options are used except them passed in the constructor. 1 2 3 4 new Storelocator ({ apiKey : '' , webServiceUrl : '' })","title":"Simple example"},{"location":"how-it-works.html#example-with-the-onready-function","text":"The onReady function expose the map instance and is called when the map is instantiated and ready. With the example below, An automatic search is triggered with location coordinates passed in parameters. 1 2 3 4 5 6 7 8 9 new Storelocator ({ apiKey : '' , webServiceUrl : '' }, onReady : function ( map ) { this . triggerRequest ({ 'lat' : 48.8589507 , 'lng' : 2.2770202 }); })","title":"Example with the onReady function"},{"location":"how-it-works.html#requests","text":"All search requests use the fetch API to communicate with the cloud function with the following parameters. Datas are transmitted by JSON format.","title":"Requests"},{"location":"how-it-works.html#lat","text":"default: float = null Tells storelocatorjs what is the latitude of the research.","title":"lat"},{"location":"how-it-works.html#lng","text":"default: float = null Tells storelocatorjs what is the latitude of the research.","title":"lng"},{"location":"how-it-works.html#categories","text":"default: [] = null Tells storelocatorjs what are the selected categories.","title":"categories"},{"location":"how-it-works.html#radius","text":"default: integer = 50 Tells storelocatorjs what is the search radius of the request in kilometers.","title":"radius"},{"location":"how-it-works.html#limit","text":"default: Integer = 0 Tells storelocatorjs what is the limit of results return by the request. Use 0 to return unlimited stores, according to the JSON database. ((window.gitter = {}).chat = {}).options = { room: 'store-locator/store-locator' };","title":"limit"},{"location":"licenses.html","text":"Storelocatorjs Licenses \u00b6 Storelocatorjs has three kinds of licenses: open-source, commercial, and OEM. Open source license \u00b6 The open source license is designed for you to use Storelocatorjs to build open source and personal projects. The Storelocatorjs open source license is GPLv3 . The GPLv3 has many terms, but the most important is how it is sticky when you distribute your work publicly . From the GPL FAQ : If you release the modified version to the public in some way, the GPL requires you to make the modified source code available to the program's users, under the GPL. Releasing your project that uses Storelocatorjs under the GPLv3, in turn, requires your project to be licensed under the GPLv3. If you are okay with this, feel free to use Storelocatorjs under the GPLv3, without purchasing a commercial license. Commercial license \u00b6 The commercial license is designed to for you to use Storelocatorjs for an unlimited amount of applications during ONE year. With the commercial license, your code is kept propietary, to yourself. If you want to use Storelocatorjs to develop commercial sites, themes, projects, and applications, the commercial license is the appropriate license. Purchasing \u00b6 Purchasing takes a minute, payment is made via Gumroad . Our purchasing form accepts credit cards or PayPal. Once purchased, you'll receive a commercial license PDF and you will be all set to use Storelocatorjs in your commercial applications. With the purchase of a commercial license: You may use Storelocatorjs during a whole year for as many fevelopers as you want You may use Storelocatorjs in as many commercial applications you like. You may use Storelocatorjs in your own commercial applications and products. For example: premium WordPress, Drupal, or other CMS themes, plugins and templates. Customers and users of your products do not need to purchase their own license \u2014 so long as they are not developing their own commercial products with Storelocator. Commercial license Storelocatorjs License per year for as many developers as you want $ 99 Commercial Licenses are priced and valid for a whole year for as many developers as you want. Read the Storelocatorjs Commercial License Agreement below for complete terms and details. For any questions about licensing, contact joris.daniel@gmail.com . Commercial OEM license \u00b6 If you want to include Storelocatorjs as part of a commercial interface builder, SDK, or toolkit, choose the Commercial OEM license. Commercial OEM licenses are customized for each customer. Please contact me by email: joris.daniel@gmail.com . Info Below are the official Storelocatorjs Commercial License terms, as well as a plain English summary of the terms. These summaries are provided for your convenience, but are not binding; your use of Storelocatorjs is governed by the full license terms. License Agreement \u00b6 This Software License Agreement (the \" Agreement \") is between Joris DANIEL (\" Author \") and You (including your agents and affiliates), a commercial licensee of Author's software. 1. Definitions \u00b6 1.1 - \" Application \" means any software, application, or elements that Your Licensed Developers develop using the Software or Modifications in accordance with this Agreement. 1.2 - \" End User \" means an end user of Your Application who acquires a license to such solely for their own use and not for distribution, resale, user interface design, or software development purposes. 1.3 - \" Licensed Developers \" shall mean developers persons permitted to use the Software and make Modifications for your Applications, whether such persons are Yours employees or consultants or contractors providing services to You. 1.4 - \" Modification \" means any revision, adaptation, or derivative of the Software produced by You. 1.5 - The \" Software \" means Storelocatorjs version 1. 2. Commercial license grant \u00b6 2.1 - Subject to the terms of this Agreement, Author grants to You a revocable, non-exclusive, non-transferable license: to use the Software to create Modifications and Applications; for You to distribute the Software and/or Modifications to an unlimited number of End Users solely as integrated into the Applications; and for End Users to use the Software as incorporated into Your Applications in accordance with the terms of this Agreement. 2.2 - You are entitled to receive all updates to the major version of the Software licensed by you, as well as any later version of the Software that Author, in writing, explicitly authorizes you to use. (For illustration purposes only, if you purchased a license for version 1.0, this licenses authorizes you to use version 1.9, but not 2.0.) Author makes no representation that any update will be compatible with your Application. 3. Ownership \u00b6 3.1 - This is a license agreement and not an agreement for sale. Author reserves ownership of all intellectual property rights inherent in or relating to the Software and corresponding source code, which include all copyright, patent rights, all rights in relation to registered and unregistered trademarks (including service marks), confidential information (including trade secrets and know-how) and all rights other than those expressly granted by this Agreement. 3.2 - You must not remove, obscure or interfere with any copyright, acknowledgment, attribution, trademark, warning or disclaimer statement affixed to, incorporated in or otherwise applied in connection with the Software. Notwithstanding the above, you are permitted to produce, use, and distribute compressed or \"minified\" copies of the Software that do not bear the notices contained in the Software's source code, so long as you otherwise comply with the terms of this license. 4. Prohibited Uses \u00b6 4.1 - Your Application must have substantially different functionality than, and must not compete directly with, the Software. 4.2 - You may not distribute the Software or Modifications except as included within Your Application. 4.3 - If You produce an Application for a customer, You are responsible for ensuring that your customer does not make use of the Software except with Applications licensed herein. 4.4 - Your Application must not enable End Users to produce separate applications that incorporate the Software or Modifications. For example, if Your Application is a development toolkit or library, an application builder, a website builder that can be used to incorporate the Software into a new Application, You must obtain a separate OEM license from Author. 5. Termination \u00b6 5.1 - This Agreement and the license granted hereunder shall continue until terminated in accordance with this Section. Unless otherwise specified in this Agreement, the license shall last as long as Your use of the Software is in compliance with the terms herein. 5.2 - Author shall have the right to terminate this Agreement and the license granted hereunder immediately if You breach any of the material terms of this Agreement, and You fail to cure such material breach within thirty (30) days of receipt of notice from Author. Upon termination of this Agreement, all licenses granted to You in this Agreement shall terminate automatically and You shall immediately cease use and distribution of the Software. 5.3 - Upon termination of this Agreement, You must cease all use of the Software. If, prior to your breach of this Agreement, you delivered Applications incorporating the Software to Your End Users, those End Users' licenses shall survive termination. 6. Disclaimer of Warranties \u00b6 6.1 - To the extent permitted by law, Author disclaims all warranties and conditions, either express or implied, including, but not limited to, implied warranties of merchantability, fitness for a particular purpose, title and non-infringement, with regard to the software. we do not guarantee that the operation of the software or your application will be uninterrupted or error-free, and you acknowledge that it is not technically practicable for us to do so. 7. Limitation of Liabilities \u00b6 7.1 - To the extent permitted by law, in no event shall Author be liable under any legal or equitable theory for any special, incidental, indirect or consequential damages whatsoever (including, without limitation, damages for loss of business profits, business interruption, loss of business information, or any other pecuniary law) arising out of the use of or inability to use the software or the code it produces or any other subject matter relating to this agreement, even if Author has been advised of the possibility of such damages. in any case, Author's entire liability with respect to any subject matter relating to this agreement shall be limited to the greater of: the amount actually paid by you for the license. 8. Indemnification \u00b6 8.1 - While redistributing the Software or Modifications thereof as part of Your Application, You may choose to offer acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this Agreement. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, and not on Author's behalf. 8.2 - You agree to indemnify, hold harmless, and defend Author and its owners, officers, agents, and affiliates from and against any and all claims, lawsuits and proceedings (collectively \"Claims\"), and all expenses, costs (including attorney's fees), judgments, damages and other liabilities resulting from such Claims, that arise or result from: (i) Your use of the Software in violation of this Agreement; the use or distribution of Your Application, except to the extent such claim is based solely on the inclusion of the Software therein; Your Modification of the Software's source code; or Your accepting support, warranty, indemnity, or additional liability as described in Section 8.1. 9. Payment and Taxes \u00b6 9.1 - All payments under this Agreement are due to Author upon Your purchase of a license to the Software. 9.2 - Each party shall be responsible for all taxes (including, but not limited to, taxes based upon its income) or levies imposed on it under applicable laws, regulations and tax treaties as a result of this Agreement and any payments made hereunder (including those required to be withheld or deducted from payments); provided that You shall be responsible for any value added tax, use tax, sales tax, or similar tax, and shall pay or reimburse Author for the same upon invoice. Each party shall furnish evidence of such paid taxes as is sufficient to enable the other party to obtain any credits available to it, including original tax withholding certificates. 10. Miscellaneous \u00b6 10.1 - Software Updates and Upgrades . The license granted herein applies only to the version of the Software available when purchased in connection with the terms of this Agreement, and to any updates and/or upgrades to which You may be entitled. Any previous or subsequent license granted to You for use of the Software shall be governed by the terms and conditions of the agreement entered in connection with purchase or download of that version of the Software. 10.2 - Survival . The provisions of sections 4 through 10 will survive termination of this Agreement. 10.3 - Compliance with Applicable Laws . You agree that You will comply with all applicable laws and regulations with respect to the Software, including without limitation all export control laws and regulations. 10.4 - Assignment . This Agreement may be assigned by Author in whole or in part and will inure to the benefit of Author's successors and assigns. You may not assign or transfer this Agreement without Author's prior written consent. Notwithstanding the foregoing, however, if You transfer ownership of an Application to a customer for which it was developed, You may assign this Agreement to that customer (the \"Assignee\") provided: You provide written notice to Author prior to the effective date of such assignment; and there is a written agreement, wherein the Assignee accepts the terms of this Agreement. 10.5 - Entire Agreement . The terms and conditions stated herein set forth the entire agreement of the parties and replace and supersede all other contracts, agreements, and understandings, written or oral, relating to the subject matter hereof. 10.6 - Severability . In the event that any portion of this Agreement is held to be unenforceable, such portions shall not limit or otherwise modify or affect any other portion of this Agreement. 10.7 - Modification; Waiver . This Agreement cannot be amended except by a written instrument executed by each of the parties. The failure of either party to enforce any provision of this Agreement may not be deemed a waiver of that or any other provision of this Agreement. ((window.gitter = {}).chat = {}).options = { room: 'store-locator/store-locator' };","title":"Licenses"},{"location":"licenses.html#storelocatorjs-licenses","text":"Storelocatorjs has three kinds of licenses: open-source, commercial, and OEM.","title":"Storelocatorjs Licenses"},{"location":"licenses.html#open-source-license","text":"The open source license is designed for you to use Storelocatorjs to build open source and personal projects. The Storelocatorjs open source license is GPLv3 . The GPLv3 has many terms, but the most important is how it is sticky when you distribute your work publicly . From the GPL FAQ : If you release the modified version to the public in some way, the GPL requires you to make the modified source code available to the program's users, under the GPL. Releasing your project that uses Storelocatorjs under the GPLv3, in turn, requires your project to be licensed under the GPLv3. If you are okay with this, feel free to use Storelocatorjs under the GPLv3, without purchasing a commercial license.","title":"Open source license"},{"location":"licenses.html#commercial-license","text":"The commercial license is designed to for you to use Storelocatorjs for an unlimited amount of applications during ONE year. With the commercial license, your code is kept propietary, to yourself. If you want to use Storelocatorjs to develop commercial sites, themes, projects, and applications, the commercial license is the appropriate license.","title":"Commercial license"},{"location":"licenses.html#purchasing","text":"Purchasing takes a minute, payment is made via Gumroad . Our purchasing form accepts credit cards or PayPal. Once purchased, you'll receive a commercial license PDF and you will be all set to use Storelocatorjs in your commercial applications. With the purchase of a commercial license: You may use Storelocatorjs during a whole year for as many fevelopers as you want You may use Storelocatorjs in as many commercial applications you like. You may use Storelocatorjs in your own commercial applications and products. For example: premium WordPress, Drupal, or other CMS themes, plugins and templates. Customers and users of your products do not need to purchase their own license \u2014 so long as they are not developing their own commercial products with Storelocator. Commercial license Storelocatorjs License per year for as many developers as you want $ 99 Commercial Licenses are priced and valid for a whole year for as many developers as you want. Read the Storelocatorjs Commercial License Agreement below for complete terms and details. For any questions about licensing, contact joris.daniel@gmail.com .","title":"Purchasing"},{"location":"licenses.html#commercial-oem-license","text":"If you want to include Storelocatorjs as part of a commercial interface builder, SDK, or toolkit, choose the Commercial OEM license. Commercial OEM licenses are customized for each customer. Please contact me by email: joris.daniel@gmail.com . Info Below are the official Storelocatorjs Commercial License terms, as well as a plain English summary of the terms. These summaries are provided for your convenience, but are not binding; your use of Storelocatorjs is governed by the full license terms.","title":"Commercial OEM license"},{"location":"licenses.html#license-agreement","text":"This Software License Agreement (the \" Agreement \") is between Joris DANIEL (\" Author \") and You (including your agents and affiliates), a commercial licensee of Author's software.","title":"License Agreement"},{"location":"licenses.html#1-definitions","text":"1.1 - \" Application \" means any software, application, or elements that Your Licensed Developers develop using the Software or Modifications in accordance with this Agreement. 1.2 - \" End User \" means an end user of Your Application who acquires a license to such solely for their own use and not for distribution, resale, user interface design, or software development purposes. 1.3 - \" Licensed Developers \" shall mean developers persons permitted to use the Software and make Modifications for your Applications, whether such persons are Yours employees or consultants or contractors providing services to You. 1.4 - \" Modification \" means any revision, adaptation, or derivative of the Software produced by You. 1.5 - The \" Software \" means Storelocatorjs version 1.","title":"1. Definitions"},{"location":"licenses.html#2-commercial-license-grant","text":"2.1 - Subject to the terms of this Agreement, Author grants to You a revocable, non-exclusive, non-transferable license: to use the Software to create Modifications and Applications; for You to distribute the Software and/or Modifications to an unlimited number of End Users solely as integrated into the Applications; and for End Users to use the Software as incorporated into Your Applications in accordance with the terms of this Agreement. 2.2 - You are entitled to receive all updates to the major version of the Software licensed by you, as well as any later version of the Software that Author, in writing, explicitly authorizes you to use. (For illustration purposes only, if you purchased a license for version 1.0, this licenses authorizes you to use version 1.9, but not 2.0.) Author makes no representation that any update will be compatible with your Application.","title":"2. Commercial license grant"},{"location":"licenses.html#3-ownership","text":"3.1 - This is a license agreement and not an agreement for sale. Author reserves ownership of all intellectual property rights inherent in or relating to the Software and corresponding source code, which include all copyright, patent rights, all rights in relation to registered and unregistered trademarks (including service marks), confidential information (including trade secrets and know-how) and all rights other than those expressly granted by this Agreement. 3.2 - You must not remove, obscure or interfere with any copyright, acknowledgment, attribution, trademark, warning or disclaimer statement affixed to, incorporated in or otherwise applied in connection with the Software. Notwithstanding the above, you are permitted to produce, use, and distribute compressed or \"minified\" copies of the Software that do not bear the notices contained in the Software's source code, so long as you otherwise comply with the terms of this license.","title":"3. Ownership"},{"location":"licenses.html#4-prohibited-uses","text":"4.1 - Your Application must have substantially different functionality than, and must not compete directly with, the Software. 4.2 - You may not distribute the Software or Modifications except as included within Your Application. 4.3 - If You produce an Application for a customer, You are responsible for ensuring that your customer does not make use of the Software except with Applications licensed herein. 4.4 - Your Application must not enable End Users to produce separate applications that incorporate the Software or Modifications. For example, if Your Application is a development toolkit or library, an application builder, a website builder that can be used to incorporate the Software into a new Application, You must obtain a separate OEM license from Author.","title":"4. Prohibited Uses"},{"location":"licenses.html#5-termination","text":"5.1 - This Agreement and the license granted hereunder shall continue until terminated in accordance with this Section. Unless otherwise specified in this Agreement, the license shall last as long as Your use of the Software is in compliance with the terms herein. 5.2 - Author shall have the right to terminate this Agreement and the license granted hereunder immediately if You breach any of the material terms of this Agreement, and You fail to cure such material breach within thirty (30) days of receipt of notice from Author. Upon termination of this Agreement, all licenses granted to You in this Agreement shall terminate automatically and You shall immediately cease use and distribution of the Software. 5.3 - Upon termination of this Agreement, You must cease all use of the Software. If, prior to your breach of this Agreement, you delivered Applications incorporating the Software to Your End Users, those End Users' licenses shall survive termination.","title":"5. Termination"},{"location":"licenses.html#6-disclaimer-of-warranties","text":"6.1 - To the extent permitted by law, Author disclaims all warranties and conditions, either express or implied, including, but not limited to, implied warranties of merchantability, fitness for a particular purpose, title and non-infringement, with regard to the software. we do not guarantee that the operation of the software or your application will be uninterrupted or error-free, and you acknowledge that it is not technically practicable for us to do so.","title":"6. Disclaimer of Warranties"},{"location":"licenses.html#7-limitation-of-liabilities","text":"7.1 - To the extent permitted by law, in no event shall Author be liable under any legal or equitable theory for any special, incidental, indirect or consequential damages whatsoever (including, without limitation, damages for loss of business profits, business interruption, loss of business information, or any other pecuniary law) arising out of the use of or inability to use the software or the code it produces or any other subject matter relating to this agreement, even if Author has been advised of the possibility of such damages. in any case, Author's entire liability with respect to any subject matter relating to this agreement shall be limited to the greater of: the amount actually paid by you for the license.","title":"7. Limitation of Liabilities"},{"location":"licenses.html#8-indemnification","text":"8.1 - While redistributing the Software or Modifications thereof as part of Your Application, You may choose to offer acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this Agreement. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, and not on Author's behalf. 8.2 - You agree to indemnify, hold harmless, and defend Author and its owners, officers, agents, and affiliates from and against any and all claims, lawsuits and proceedings (collectively \"Claims\"), and all expenses, costs (including attorney's fees), judgments, damages and other liabilities resulting from such Claims, that arise or result from: (i) Your use of the Software in violation of this Agreement; the use or distribution of Your Application, except to the extent such claim is based solely on the inclusion of the Software therein; Your Modification of the Software's source code; or Your accepting support, warranty, indemnity, or additional liability as described in Section 8.1.","title":"8. Indemnification"},{"location":"licenses.html#9-payment-and-taxes","text":"9.1 - All payments under this Agreement are due to Author upon Your purchase of a license to the Software. 9.2 - Each party shall be responsible for all taxes (including, but not limited to, taxes based upon its income) or levies imposed on it under applicable laws, regulations and tax treaties as a result of this Agreement and any payments made hereunder (including those required to be withheld or deducted from payments); provided that You shall be responsible for any value added tax, use tax, sales tax, or similar tax, and shall pay or reimburse Author for the same upon invoice. Each party shall furnish evidence of such paid taxes as is sufficient to enable the other party to obtain any credits available to it, including original tax withholding certificates.","title":"9. Payment and Taxes"},{"location":"licenses.html#10-miscellaneous","text":"10.1 - Software Updates and Upgrades . The license granted herein applies only to the version of the Software available when purchased in connection with the terms of this Agreement, and to any updates and/or upgrades to which You may be entitled. Any previous or subsequent license granted to You for use of the Software shall be governed by the terms and conditions of the agreement entered in connection with purchase or download of that version of the Software. 10.2 - Survival . The provisions of sections 4 through 10 will survive termination of this Agreement. 10.3 - Compliance with Applicable Laws . You agree that You will comply with all applicable laws and regulations with respect to the Software, including without limitation all export control laws and regulations. 10.4 - Assignment . This Agreement may be assigned by Author in whole or in part and will inure to the benefit of Author's successors and assigns. You may not assign or transfer this Agreement without Author's prior written consent. Notwithstanding the foregoing, however, if You transfer ownership of an Application to a customer for which it was developed, You may assign this Agreement to that customer (the \"Assignee\") provided: You provide written notice to Author prior to the effective date of such assignment; and there is a written agreement, wherein the Assignee accepts the terms of this Agreement. 10.5 - Entire Agreement . The terms and conditions stated herein set forth the entire agreement of the parties and replace and supersede all other contracts, agreements, and understandings, written or oral, relating to the subject matter hereof. 10.6 - Severability . In the event that any portion of this Agreement is held to be unenforceable, such portions shall not limit or otherwise modify or affect any other portion of this Agreement. 10.7 - Modification; Waiver . This Agreement cannot be amended except by a written instrument executed by each of the parties. The failure of either party to enforce any provision of this Agreement may not be deemed a waiver of that or any other provision of this Agreement. ((window.gitter = {}).chat = {}).options = { room: 'store-locator/store-locator' };","title":"10. Miscellaneous"}]}